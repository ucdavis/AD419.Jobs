@model AD419.Jobs.PullNifaData.Models.TableModel;

MERGE INTO @{@Model.Name}_New AS target
USING #@Model.Name AS source ON (
  @{string.Join($"{Environment.NewLine}  AND ", Model.Columns
      .Where(c => c.KeyOrder.HasValue)
      .OrderBy(c => c.KeyOrder)
      .Select(c => c.Nullable
        // explicitly consider columns equal if they both contain NULL
        ? $"(target.[{c.Name}] = source.[{c.Name}] OR (target.[{c.Name}] IS NULL AND source.[{c.Name}] IS NULL))" 
        : $"target.[{c.Name}] = source.[{c.Name}]"));}
) 
WHEN MATCHED THEN UPDATE SET
  @{string.Join($",{Environment.NewLine}  ", Model.Columns
      .Where(c => !c.KeyOrder.HasValue)
      .OrderBy(c => c.ColumnOrder)
      .Select(c => $"target.[{c.Name}] = source.[{c.Name}]"));},
  target.LastUpdated = GETDATE(),
  target.IsActive = 1
WHEN NOT MATCHED BY target THEN INSERT (
  @{string.Join($",{Environment.NewLine}  ", Model.Columns
      .OrderBy(c => c.ColumnOrder)
      .Select(c => $"[{c.Name}]"));},
  GETDATE(),
  1
) VALUES (
  @{string.Join($",{Environment.NewLine}  ", Model.Columns
      .OrderBy(c => c.ColumnOrder)
      .Select(c => $"source.[{c.Name}]"));}
)
WHEN NOT MATCHED BY source THEN UPDATE SET
  target.IsActive = 0;
;

go

truncate table #@Model.Name;

go
